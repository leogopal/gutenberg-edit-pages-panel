{"version":3,"file":"gutenberg_edit_pages.js","mappings":"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","sources":["webpack://@gutenberg/edit-pages-panel/./src/components/CreatePageButton.js","webpack://@gutenberg/edit-pages-panel/./src/components/CreatePageForm.js","webpack://@gutenberg/edit-pages-panel/./src/components/DeletePageButton.js","webpack://@gutenberg/edit-pages-panel/./src/components/Notifications.js","webpack://@gutenberg/edit-pages-panel/./src/components/PageForm.js","webpack://@gutenberg/edit-pages-panel/./src/components/PagesList.js","webpack://@gutenberg/edit-pages-panel/./src/components/editPagesIcon.js","webpack://@gutenberg/edit-pages-panel/./src/components/index.js","webpack://@gutenberg/edit-pages-panel/external window \"ReactJSXRuntime\"","webpack://@gutenberg/edit-pages-panel/external window [\"wp\",\"components\"]","webpack://@gutenberg/edit-pages-panel/external window [\"wp\",\"coreData\"]","webpack://@gutenberg/edit-pages-panel/external window [\"wp\",\"data\"]","webpack://@gutenberg/edit-pages-panel/external window [\"wp\",\"element\"]","webpack://@gutenberg/edit-pages-panel/external window [\"wp\",\"htmlEntities\"]","webpack://@gutenberg/edit-pages-panel/external window [\"wp\",\"i18n\"]","webpack://@gutenberg/edit-pages-panel/external window [\"wp\",\"notices\"]","webpack://@gutenberg/edit-pages-panel/external window [\"wp\",\"plugins\"]","webpack://@gutenberg/edit-pages-panel/webpack/bootstrap","webpack://@gutenberg/edit-pages-panel/webpack/runtime/compat get default export","webpack://@gutenberg/edit-pages-panel/webpack/runtime/define property getters","webpack://@gutenberg/edit-pages-panel/webpack/runtime/hasOwnProperty shorthand","webpack://@gutenberg/edit-pages-panel/webpack/runtime/make namespace object","webpack://@gutenberg/edit-pages-panel/./src/gutenberg_edit_pages.js"],"sourcesContent":["import { useState } from '@wordpress/element';\nimport { Button, Modal } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport CreatePageForm from './CreatePageForm';\n\n/**\n * CreatePageButton component renders a button that opens a modal\n * to create a new page when clicked.\n *\n * @component\n * @example\n * return (\n *   <CreatePageButton />\n * )\n */\nexport default function CreatePageButton() {\n    // State to manage the visibility of the modal\n    const [isOpen, setOpen] = useState(false);\n\n    // Function to open the modal\n    const openModal = () => setOpen(true);\n\n    // Function to close the modal\n    const closeModal = () => setOpen(false);\n\n    return (\n        <>\n            {/* Button to trigger the modal */}\n            <Button onClick={openModal} variant=\"primary\">\n                {__('Create a new Page', 'hostinger-easy-onboarding')}\n            </Button>\n            {/* Modal that contains the CreatePageForm component */}\n            {isOpen && (\n                <Modal onRequestClose={closeModal} title={__('Create a new page', 'hostinger-easy-onboarding')}>\n                    <CreatePageForm\n                        onCancel={closeModal}\n                        onSaveFinished={closeModal}\n                    />\n                </Modal>\n            )}\n        </>\n    );\n}\n","import { useState } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport PageForm from './PageForm';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * CreatePageForm component renders a form to create a new page.\n *\n * @component\n * @param {Object} props - Component properties.\n * @param {Function} props.onCancel - Function to call when the cancel button is clicked.\n * @param {Function} props.onSaveFinished - Function to call when the save operation is finished.\n * @example\n * return (\n *   <CreatePageForm onCancel={handleCancel} onSaveFinished={handleSaveFinished} />\n * )\n */\nexport default function CreatePageForm({ onCancel, onSaveFinished }) {\n    // State to manage the title of the new page\n    const [title, setTitle] = useState();\n\n    // Destructure functions from the notices store\n    const { createSuccessNotice, createErrorNotice } = useDispatch(noticesStore);\n\n    // Destructure saveEntityRecord function from the core data store\n    const { saveEntityRecord } = useDispatch(coreDataStore);\n\n    /**\n     * Function to handle the save operation.\n     * It saves the new page and shows a success or error notice.\n     */\n    const handleSave = async () => {\n        const savedRecord = await saveEntityRecord('postType', 'page', {\n            title,\n            status: 'publish',\n        });\n        if (savedRecord) {\n            onSaveFinished();\n            // Tell the user the operation succeeded:\n            await createSuccessNotice(\n                sprintf(\n                    /* translators: %s: page title */\n                    __('The page %s was created!', 'hostinger-easy-onboarding'),\n                    savedRecord.title.rendered\n                ),\n                {\n                    type: 'snackbar',\n                    actions: [\n                        {\n                            url: savedRecord.link,\n                            label: __('View post', 'hostinger-easy-onboarding'),\n                        },\n                    ],\n                    politeness: 'assertive',\n                    explicitDismiss: true,\n                }\n            );\n        } else {\n            // Tell the user the operation failed:\n            await createErrorNotice(\n                __('Failed to create the page', 'hostinger-easy-onboarding'),\n                {\n                    type: 'snackbar',\n                }\n            );\n        }\n    };\n\n    // Select the last error and saving state from the core data store\n    const { lastError, isSaving } = useSelect(\n        (select) => ({\n            lastError: select(coreDataStore).getLastEntitySaveError('postType', 'page'),\n            isSaving: select(coreDataStore).isSavingEntityRecord('postType', 'page'),\n        }),\n        []\n    );\n\n    return (\n        <PageForm\n            title={title}\n            onChangeTitle={setTitle}\n            hasEdits={!!title}\n            lastError={lastError}\n            isSaving={isSaving}\n            onSave={handleSave}\n            onCancel={onCancel}\n        />\n    );\n}\n","import { store as noticesStore } from '@wordpress/notices';\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\nimport { Button, Spinner } from '@wordpress/components';\n\nconst DeletePageButton = ( { pageId } ) => {\n\tconst { createSuccessNotice, createErrorNotice } =\n\t\tuseDispatch( noticesStore );\n\t// useSelect returns a list of selectors if you pass the store handle\n\t// instead of a callback:\n\tconst { getLastEntityDeleteError } = useSelect( coreDataStore );\n\tconst handleDelete = async () => {\n\t\t// Confirm the deletion with confirm dialog\n\t\tconst isConfirmed = window.confirm(\n\t\t\t'Are you sure you want to delete this page?'\n\t\t);\n\n\t\tif ( ! isConfirmed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst success = await deleteEntityRecord( 'postType', 'page', pageId );\n\t\tif ( success ) {\n\t\t\t// Tell the user the operation succeeded:\n\t\t\tcreateSuccessNotice( 'The page was deleted!', {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t} else {\n\t\t\t// We use the selector directly to get the fresh error *after* the deleteEntityRecord\n\t\t\t// have failed.\n\t\t\tconst lastError = getLastEntityDeleteError(\n\t\t\t\t'postType',\n\t\t\t\t'page',\n\t\t\t\tpageId\n\t\t\t);\n\t\t\tconst message =\n\t\t\t\t( lastError?.message || 'There was an error.' ) +\n\t\t\t\t' Please refresh the page and try again.';\n\t\t\t// Tell the user how exactly the operation has failed:\n\t\t\tcreateErrorNotice( message, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t}\n\t};\n\tconst { deleteEntityRecord } = useDispatch( coreDataStore );\n\tconst { isDeleting, error } = useSelect(\n\t\t( select ) => ( {\n\t\t\tisDeleting: select( coreDataStore ).isDeletingEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t'page',\n\t\t\t\tpageId\n\t\t\t),\n\t\t\terror: select( coreDataStore ).getLastEntityDeleteError(\n\t\t\t\t'postType',\n\t\t\t\t'page',\n\t\t\t\tpageId\n\t\t\t),\n\t\t} ),\n\t\t[ pageId ]\n\t);\n\tuseEffect( () => {\n\t\tif ( error ) {\n\t\t\t// Display the error\n\t\t}\n\t}, [ error ] );\n\treturn (\n\t\t<Button\n\t\t\tvariant=\"secondary\"\n\t\t\tonClick={ handleDelete }\n\t\t\tdisabled={ isDeleting }\n\t\t\tsize=\"small\"\n\t\t\ttooltip=\"Delete page\"\n\t\t\tshowTooltip={ true }\n\t\t\tlabel=\"Delete page\"\n\t\t\ticon=\"trash\"\n\t\t\ticonSize={ 12 }\n\t\t\tclassName=\"delete-page-button\"\n\t\t>\n\t\t\t{isDeleting ? (\n\t\t\t\t<>\n\t\t\t\t\t<Spinner/>\n\t\t\t\t</>\n\t\t\t) :' '}\n\t\t</Button>\n\t);\n};\n\nexport default DeletePageButton;\n","import {useDispatch, useSelect} from '@wordpress/data';\nimport {store as noticesStore} from '@wordpress/notices';\nimport {SnackbarList} from '@wordpress/components';\n\n/**\n * Notifications component renders a list of snackbar notifications.\n *\n * @component\n * @example\n * return (\n *   <Notifications />\n * )\n */\nexport default function Notifications() {\n    // Select all notices from the notices store\n    const notices = useSelect(\n        (select) => select(noticesStore).getNotices( ),\n        []\n    );\n\n    // Destructure the removeNotice function from the notices store\n    const {removeNotice} = useDispatch(noticesStore);\n\n    // Filter notices to only include those of type 'snackbar'\n    const snackbarNotices = notices.filter(\n        ({type}) => type === 'snackbar'\n    );\n\n    return (\n        <SnackbarList\n            notices={snackbarNotices}\n            className=\"components-editor-notices__snackbar\"\n            onRemove={removeNotice}\n        />\n    );\n}\n","import {Button, Spinner, TextControl} from '@wordpress/components';\n\n/**\n * PageForm component renders a form for creating or editing a page.\n *\n * @component\n * @param {Object} props - Component properties.\n * @param {string} props.title - The title of the page.\n * @param {Function} props.onChangeTitle - Function to call when the title changes.\n * @param {boolean} props.hasEdits - Indicates if there are unsaved edits.\n * @param {Object} props.lastError - The last error encountered during save.\n * @param {boolean} props.isSaving - Indicates if the page is currently being saved.\n * @param {Function} props.onCancel - Function to call when the cancel button is clicked.\n * @param {Function} props.onSave - Function to call when the save button is clicked.\n * @example\n * return (\n *   <PageForm\n *     title={pageTitle}\n *     onChangeTitle={handleTitleChange}\n *     hasEdits={hasUnsavedEdits}\n *     lastError={saveError}\n *     isSaving={isPageSaving}\n *     onCancel={handleCancel}\n *     onSave={handleSave}\n *   />\n * )\n */\nexport default function PageForm(\n\t{\n\t\ttitle,\n\t\tonChangeTitle,\n\t\thasEdits,\n\t\tlastError,\n\t\tisSaving,\n\t\tonCancel,\n\t\tonSave,\n\t}) {\n\treturn (\n\t\t<div className=\"my-gutenberg-form\">\n\t\t\t<TextControl\n\t\t\t\tlabel=\"Page title:\"\n\t\t\t\tvalue={title}\n\t\t\t\tonChange={onChangeTitle}\n\t\t\t/>\n\t\t\t{lastError ? (\n\t\t\t\t<div className=\"form-error\">Error: {lastError.message}</div>\n\t\t\t) : false}\n\t\t\t<div className=\"form-buttons\">\n\t\t\t\t<Button\n\t\t\t\t\tonClick={onSave}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tdisabled={!hasEdits || isSaving}\n\t\t\t\t>\n\t\t\t\t\t{isSaving ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Spinner/>\n\t\t\t\t\t\t\tSaving\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t'Save'\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={onCancel}\n\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\tdisabled={isSaving}\n\t\t\t\t>\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import {decodeEntities} from '@wordpress/html-entities';\nimport {Button, ButtonGroup, Spinner} from '@wordpress/components';\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport DeletePageButton from './DeletePageButton';\n\n/**\n * PageEditButton component renders a button to edit a page.\n *\n * @component\n * @param {Object} props - Component properties.\n * @param {number} props.postID - The ID of the post to edit.\n * @example\n * return (\n *   <PageEditButton postID={1} />\n * )\n */\nconst PageEditButton = ({postID}) => (\n\t<Button\n\t\tvariant=\"primary\"\n\t\thref={`/wp-admin/post.php?post=${postID}&action=edit`}\n\t\tsize=\"small\"\n\t\ttooltip=\"Edit Page\"\n\t\tshowTooltip={true}\n\t\tlabel=\"Edit Page\"\n\t\ticon=\"edit\"\n\t\ticonSize={ 12 }\n\t\tclassName=\"edit-page-button\"\n\t>\n\t\tEdit\n\t</Button>\n);\n\n/**\n * PagesList component renders a list of pages in a table format.\n *\n * @component\n * @param {Object} props - Component properties.\n * @param {boolean} props.hasResolved - Indicates if the pages data has been resolved.\n * @param {Array} props.pages - Array of page objects to display.\n * @example\n * const pages = [\n *   { id: 1, title: { rendered: 'Page 1' } },\n *   { id: 2, title: { rendered: 'Page 2' } }\n * ];\n * return (\n *   <PagesList hasResolved={true} pages={pages} />\n * )\n */\nexport default function PagesList({hasResolved, pages, currentPage = null}) {\n\tif (!hasResolved) {\n\t\treturn <Spinner/>;\n\t}\n\tif (!pages?.length) {\n\t\treturn <div>No results</div>;\n\t}\n\n\treturn (\n\t\t<table className=\"wp-list-table widefat fixed striped table-view-list\">\n\t\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th className=\"manage-column column-primary\">Title</th>\n\t\t\t\t<th className=\"manage-column\" style={{width: 120}}>Actions</th>\n\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t{pages?.map((page) => (\n\t\t\t\t<tr key={page.id}>\n\t\t\t\t\t<td>{decodeEntities(page.title.rendered)}  </td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{ currentPage !== page.id ? (\n\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t<PageEditButton postID={page.id}/>\n\t\t\t\t\t\t\t\t<DeletePageButton pageId={page.id}/>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t) : 'Current page' }\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t))}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n}\n","import {Icon} from '@wordpress/components';\n\n/**\n * editPagesIcon component renders an SVG icon for editing pages.\n *\n * @component\n * @example\n * return (\n *   <editPagesIcon />\n * )\n */\nexport default function editPagesIcon() {\n\treturn (\n\t\t<Icon\n\t\t\ticon={\n\t\t\t\t<svg\n\t\t\t\t\twidth=\"16\"\n\t\t\t\t\theight=\"16\"\n\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\t\td=\"M6.9 14.2c0-.4.2-.8.6-.8h6.1c.4 0 .7.4.7.8s-.3.7-.7.7H7.5c-.4 0-.6-.3-.6-.7z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\t\td=\"M4.3 12.7L13.1 3.8c0 0 0 0 0-.1s0 0 0-.1L12.2 2.8c0 0 0 0-.1 0s0 0-.1 0L6.7 8.3 3.3 11.7c0 0 0 0 0 0s0 0 0 0l-.4 1.4 1.3-.4c0 0 0 0 0 0s0 0 0 0zM5.6 7.2L2.2 10.6c-.1.1-.1.2-.2.3s-.1.1-.1.2-.1.1-.1.2l-.6 2c-.1.7-.2 1-.2 1.2.1.2.3.4.5.4.2.1.5 0 1.1-.2l2.1-.6c.1 0 .2 0 .3-.1s.1 0 .1-.1c.1 0 .2-.1.3-.2l8.7-8.8c.4-.4.6-.6.7-.9.1-.2.1-.4 0-.6-.1-.2-.3-.4-.7-.8L13.3 1.8c-.4-.4-.6-.6-.9-.7-.2-.1-.4-.1-.6 0-.2.1-.4.3-.8.7L5.6 7.2z\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t}\n\t\t\tclassName=\"icon-edit-page\"\n\t\t/>\n\t);\n}\n","/**\n * Import the PagesList component from the PagesList module.\n * @module Pages\n */\nimport PagesList from './PagesList';\n\n/**\n * Import the editPagesIcon component from the editPagesIcon module.\n * @module editPagesIcon\n */\nimport editPagesIcon from './editPagesIcon';\n\n/**\n * Import the PageForm component from the PageForm module.\n * @module PageForm\n */\nimport PageForm from './PageForm';\n\n/**\n * Import the CreatePageForm component from the createPageForm module.\n * @module CreatePageForm\n */\nimport CreatePageForm from \"./CreatePageForm\";\n\n/**\n * Import the CreatePageButton component from the createPageButton module.\n * @module CreatePageButton\n */\nimport CreatePageButton from \"./CreatePageButton\";\n\n/**\n * Import the Notifications component from the Notifications module.\n * @module Notifications\n */\nimport Notifications from './Notifications';\n\nimport DeletePageButton from './DeletePageButton';\n\n/**\n * Export the imported components (PagesList, editPagesIcon, PageForm, CreatePageForm, CreatePageButton, Notifications) for use in other modules.\n * @exports PagesList\n * @exports editPagesIcon\n * @exports PageForm\n * @exports CreatePageForm\n * @exports CreatePageButton\n * @exports Notifications\n */\nexport {\n    PagesList,\n    editPagesIcon,\n    PageForm,\n    CreatePageForm,\n    CreatePageButton,\n    Notifications,\n\tDeletePageButton\n};\n","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"htmlEntities\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { __ } from '@wordpress/i18n';\nimport { registerPlugin } from '@wordpress/plugins';\nimport { Panel, PanelBody, SearchControl } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport {getCurrentPostId, store as coreDataStore} from '@wordpress/core-data';\nimport editPagesIcon from './components/editPagesIcon';\nimport { CreatePageButton, Notifications, PagesList } from './components';\n\nconst PluginSidebar = wp.editor.PluginSidebar;\n\n/**\n * PagesSearchControl component\n *\n * This component provides a search control for pages within the Gutenberg editor.\n * It uses the `useSelect` hook to fetch pages based on the search term.\n *\n * @returns {JSX.Element} The rendered component\n */\nconst PagesSearchControl = () => {\n\t// State to keep track of the search term entered by the user\n\tconst [searchTerm, setSearchTerm] = useState('');\n\n\t// Fetch pages using the `useSelect` hook based on the search term\n\tconst { pages, hasResolved, currentPage } = useSelect(\n\t\t(select) => {\n\t\t\t// Create a query object for fetching pages, use searchTerm if available\n\t\t\tconst query = searchTerm ? { search: searchTerm } : {};\n\t\t\treturn {\n\t\t\t\tpages: select(coreDataStore).getEntityRecords('postType', 'page', query),\n\t\t\t\tcurrentPage: wp.data.select('core/editor').getCurrentPostId(),\n\t\t\t\thasResolved: select(coreDataStore).hasFinishedResolution('getEntityRecords', ['postType', 'page', query]),\n\t\t\t};\n\t\t},\n\t\t[searchTerm] // Re-run this effect when searchTerm changes\n\t);\n\n\treturn (\n\t\t<PluginSidebar\n\t\t\tname=\"gutenberg_edit_pages\"\n\t\t\ticon={editPagesIcon}\n\t\t\ttitle={__('Edit Pages', 'hostinger-easy-onboarding')}\n\t\t\tclassName=\"gutenberg-edit-pages\"\n\t\t>\n\t\t\t<Panel className=\"gutenberg-edit-pages-panel\" initialOpen>\n\t\t\t\t<PanelBody title={__('Search Pages', 'hostinger-easy-onboarding')} initialOpen>\n\t\t\t\t\t<SearchControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={__('Search pages', 'hostinger-easy-onboarding')}\n\t\t\t\t\t\tplaceholder={__('Search pages', 'hostinger-easy-onboarding')}\n\t\t\t\t\t\tonChange={setSearchTerm}\n\t\t\t\t\t\tvalue={searchTerm}\n\t\t\t\t\t\tclassName=\"gutenberg-edit-pages-search\"\n\t\t\t\t\t\thelp={__('Search for pages by title', 'hostinger-easy-onboarding')}\n\t\t\t\t\t/>\n\t\t\t\t\t<hr />\n\t\t\t\t\t{/* Display the list of pages based on the search term */}\n\t\t\t\t\t<PagesList hasResolved={hasResolved} pages={pages} currentPage={currentPage} />\n\t\t\t\t\t<hr />\n\t\t\t\t\t{/* Button to create a new page */}\n\t\t\t\t\t<CreatePageButton />\n\t\t\t\t\t{/* Component to display notifications */}\n\t\t\t\t\t<Notifications />\n\t\t\t\t</PanelBody>\n\t\t\t</Panel>\n\t\t</PluginSidebar>\n\t);\n};\n\n/**\n * Register the plugin sidebar\n *\n * This function registers a plugin sidebar in the Gutenberg editor with the name 'gutenberg_edit_pages'.\n * The sidebar contains the PagesSearchControl component.\n */\nregisterPlugin('gutenberg-edit-pages', { render: PagesSearchControl });\n\n/**\n * Function to modify the button with aria-controls=\"gutenberg_edit_pages:gutenberg_edit_pages\"\n *\n * This function selects the button with the specified aria-controls attribute and modifies its inner HTML\n * and class list. If the button does not exist, it logs a message to the console.\n * The function is called when the DOMContentLoaded event is fired.\n * @returns {void}\n */\nconst addPagesBtn = () => {\n\t// Select the button with the specified aria-controls attribute\n\tconst editPagesbutton = document.querySelector('button[aria-controls=\"gutenberg-edit-pages:gutenberg_edit_pages\"]');\n\n\t// SVG icon to display in the button\n\tconst icon = `\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\" d=\"M6.9 14.2c0-.4.2-.8.6-.8h6.1c.4 0 .7.4.7.8s-.3.7-.7.7H7.5c-.4 0-.6-.3-.6-.7z\"/>\n            <path fill-rule=\"evenodd\" d=\"M4.3 12.7L13.1 3.8c0 0 0 0 0-.1s0 0 0-.1L12.2 2.8c0 0 0 0-.1 0s0 0-.1 0L6.7 8.3 3.3 11.7c0 0 0 0 0 0s0 0 0 0l-.4 1.4 1.3-.4c0 0 0 0 0 0s0 0 0 0zM5.6 7.2L2.2 10.6c-.1.1-.1.2-.2.3s-.1.1-.1.2-.1.1-.1.2l-.6 2c-.1.7-.2 1-.2 1.2.1.2.3.4.5.4.2.1.5 0 1.1-.2l2.1-.6c.1 0 .2 0 .3-.1s.1 0 .1-.1c.1 0 .2-.1.3-.2l8.7-8.8c.4-.4.6-.6.7-.9.1-.2.1-.4 0-.6-.1-.2-.3-.4-.7-.8L13.3 1.8c-.4-.4-.6-.6-.9-.7-.2-.1-.4-.1-.6 0-.2.1-.4.3-.8.7L5.6 7.2z\"/>\n        </svg>\n    `;\n\n\t// If the button is found, modify its content and classes\n\tif (editPagesbutton) {\n\t\teditPagesbutton.innerHTML = icon + ' ' + __('Edit Pages', 'hostinger-easy-onboarding');\n\t\teditPagesbutton.classList.replace('is-compact', 'is-default');\n\t\teditPagesbutton.classList.add('is-secondary');\n\t}\n};\n\n// Call `addPagesBtn` function with a delay of 500ms\nsetTimeout(addPagesBtn, 500);\n// Add event listeners to execute `addPagesBtn` on DOMContentLoaded and click events\nwindow.addEventListener('DOMContentLoaded', addPagesBtn);\nwindow.addEventListener('click', addPagesBtn);\n"],"names":["useState","Button","Modal","__","CreatePageForm","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","CreatePageButton","isOpen","setOpen","openModal","closeModal","children","onClick","variant","onRequestClose","title","onCancel","onSaveFinished","useDispatch","useSelect","store","coreDataStore","PageForm","noticesStore","setTitle","createSuccessNotice","createErrorNotice","saveEntityRecord","handleSave","savedRecord","status","sprintf","rendered","type","actions","url","link","label","politeness","explicitDismiss","lastError","isSaving","select","getLastEntitySaveError","isSavingEntityRecord","onChangeTitle","hasEdits","onSave","useEffect","Spinner","DeletePageButton","pageId","getLastEntityDeleteError","handleDelete","isConfirmed","window","confirm","success","deleteEntityRecord","message","isDeleting","error","isDeletingEntityRecord","disabled","size","tooltip","showTooltip","icon","iconSize","className","SnackbarList","Notifications","notices","getNotices","removeNotice","snackbarNotices","filter","onRemove","TextControl","value","onChange","decodeEntities","ButtonGroup","PageEditButton","postID","href","PagesList","hasResolved","pages","currentPage","length","style","width","map","page","id","Icon","editPagesIcon","height","viewBox","xmlns","fillRule","d","registerPlugin","Panel","PanelBody","SearchControl","getCurrentPostId","PluginSidebar","wp","editor","PagesSearchControl","searchTerm","setSearchTerm","query","search","getEntityRecords","data","hasFinishedResolution","name","initialOpen","__nextHasNoMarginBottom","placeholder","help","render","addPagesBtn","editPagesbutton","document","querySelector","innerHTML","classList","replace","add","setTimeout","addEventListener"],"sourceRoot":""}